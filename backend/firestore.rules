rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
  	function isSignedIn() {
    	return request.auth != null;
    }
    
    function isOwnerForCreate() {
    	return isSignedIn() && request.resource.data.owner == request.auth.uid;
    }
    
    function isOwnerForWrite() {
    	return isSignedIn() && request.auth.uid == resource.data.owner;
    }
  
  
    match /{document=**} {
      allow read, write: if false;
    }
    
    match /communities/{communityId} {
    	allow read: if true;
      allow create: if isOwnerForCreate();
      allow update, delete: if isOwnerForWrite();
    }
    
    match /community_members/{docId} {
      allow read: if true;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update, delete: if isSignedIn() && request.auth.uid == userId;
    }

    match /users/{userId} {
    	allow read: if true;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update, delete: if isSignedIn() && request.auth.uid == userId;
    }
  }
}
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    match /{document=**} {
      allow read, write: if false;
    }

    function isOwnerOfCommunity(communityId) {
      return exists(
      /databases/$(database)/documents/community_members/$(communityId + "_" + request.auth.uid)).data.role == "owner";
    }

    match /communities/{communityId} {
      allow read: if isSignedIn();
      allow create: if false;
      allow update, delete: if false;
    }

    match /community_members/{docId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && isOwnerOfCommunity(resource.data.communityId);
      allow delete: if isSignedIn() && (
      isOwnerOfCommunity(resource.data.communityId) || 
      request.auth.uid == resource.data.userId
      );
    }

    match /users/{userId} {
      allow read: if false;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update, delete: if false;
    }

    match /seasons/{seasonId} {
      allow read: if false;
    }
  }
}